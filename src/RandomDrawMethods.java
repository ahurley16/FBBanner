/* CS 125 - Intro to Computer Science
 * File Name: RandomDrawMethods.java
 * Java Programming
 * Lab 4 - Due X/XX/XXXX
 * Instructor: Dr. Dan Grissom
 * 
 * Description: This file contains the source code for Lab 4 which has some
 * abstract drawing methods in it.
 */

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

import java.awt.Color;
import java.awt.Graphics2D;

public interface RandomDrawMethods
{
	///////////////////////////////////////////////////////////////////////
	// Holds an array of basic colors for easy access. A color can be chosen by random by selecting
	// a random index within the array's size (i.e., 0 - bannerColors.length)
	final Color [] bannerColors = {Color.BLUE, Color.CYAN, Color.GREEN, Color.MAGENTA, Color.ORANGE, Color.PINK, Color.RED, Color.YELLOW };
	
	
	///////////////////////////////////////////////////////////////////////
	// Draws a filled oval of a random COLOR (use bannerColors above) and
	// at a random XY coordinate (within the FB banner (HINT: Remember,
	// your PersoanlizedFbBanner class will be inheriting from FbBanner,
	// which has a getWidth() and getHeight() method). In addition, the
	// width and height of the oval should be a random size between 0 and 100.
	//
	// You will need to call the following methods from the Graphics2D instance
	// inherited from FbBanner (g2d):
	// 		g2d.setColor(bannerColors[0]); // For example, will print Blue
	//		g2d.fillRect(int x, int y, int w, int h);
	//			// x ==> x coordinate to draw rectangle
	//			// y ==> y coordinate to draw rectangle
	//			// w ==> width of rectangle
	//			// h ==> height of rectangle
	public abstract void DrawRandomFilledOval();

	
	///////////////////////////////////////////////////////////////////////
	// Draws a filled rectangle of a random COLOR (use bannerColors above) and
	// at a random XY coordinate (within the FB banner (HINT: Remember,
	// your PersoanlizedFbBanner class will be inheriting from FbBanner,
	// which has a getWidth() and getHeight() method). In addition, the
	// width and height of the rectangle should be a random size between 0 and 100.
	//
	// You will need to call the following methods from the Graphics2D instance
	// inherited from FbBanner (g2d):
	// 		g2d.setColor(bannerColors[2]); // For example, will print Green
	//		g2d.fillOval(int x, int y, int w, int h);
	//			// x ==> x coordinate to draw oval
	//			// y ==> y coordinate to draw oval
	//			// w ==> width of oval
	//			// h ==> height of oval
	public abstract void DrawRandomFilledRectangle();

	
	///////////////////////////////////////////////////////////////////////
	// Draws the string passed in as the txt parameter at a random XY 
	// coordinate, random ANGLE, and with font size of 50.
	//
	// You will need to call the following methods from the Graphics2D instance
	// inherited from FbBanner (g2d):
	//		g2d.setColor(Color.BLACK); // Just set the color to Black for readability
	//		g2d.drawString(String txt, int x, int y);
	//			// txt ==> the String passed in as an argument
	//			// x ==> x coordinate to draw the String
	//			// y ==> y coordinate to draw the String
	//
	// You may also find it very helpful to use the following inherited methods from
	// FbBanner:
	//			rotateDrawingAngle(int rot); // Pass in a random angle (rot) between
	//										 // -20 and 20, to change the angle of String
	//										 // before calling g2d.drawString()
	//			setRotationAngleToDefault(); // Call after a call to rotateDrawingAngle()
	//										 // and g2d.drawString() to reset angle
	public abstract void DrawTextAtRandomLocation(String txt);
}
