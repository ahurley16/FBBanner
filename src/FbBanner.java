/* CS 125 - Intro to Computer Science
 * File Name: FbBanner.java
 * Java Programming
 * Lab 4 - Due X/XX/XXXX
 * Instructor: Dr. Dan Grissom
 * 
 * Description: This file contains the source code for Lab 4 which has some
 * 2DGraphics code to create facebook banners.
 */

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public abstract class FbBanner
{
	protected Graphics2D g2d; // Graphics engine for your banner
	BufferedImage banner; // image which will hold the banner
	private final static String ext = "png";
	private final int width = 850;
	private final int height = 315;
	private AffineTransform defaultRotationSetting; // Used for returning drawing settings to default
	
	// Default Constructor
	FbBanner()
	{
		// Create an image of the appropriate height for facebook
		banner = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);		
		g2d = (Graphics2D) banner.getGraphics();

		// Fill the image with white
		g2d.setColor(Color.WHITE);
		g2d.fillRect(0,  0, width, width);

		// Set the color of the "stroke" (pen) to black
		g2d.setColor(Color.BLACK);
		
		// Save default rotation settings
		defaultRotationSetting = g2d.getTransform();
	}

	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	// Abstract method which must be overridden.
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	// Abstract method which must be overridden by sub-class.
	// This method will use the member variable g2d to create
	// a custom banner. You can call g2d.(fillOval, drawOval, 
	// fillRect, drawRect, drawString etc.) to your liking to
	// get a banner you enjoy.
	public abstract void DrawCustomizedDecoration();
	
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	// FbBanner member methods.
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	// Creates an image file (.jpg) on your machine containing
	// your FB banner
	public void writeImageToFile(String fileName)
	{
		// Write the banner image to a file
		File f = new File(fileName + "." + ext);		
		try {
			ImageIO.write(banner, ext, f);
		} catch (IOException e) { System.err.println(e.getMessage()); }
	}
	
	//////////////////////////////////////////////////////////
	// Sets the angle at which objects are drawn. Should be specified
	// between -20 and 20 degrees
	protected void rotateDrawingAngle(double degrees)
	{
		// Anything beyond +/-20 degrees doesn't look good, so set limits 
		if (degrees > 20)
			degrees = 20;
		else if (degrees < -20)
			degrees = -20;
		
		// Convert to radians and rotate
		double radians = degrees * Math.PI / 180;
		g2d.rotate(radians);
	}
	
	//////////////////////////////////////////////////////////
	// Returns drawing settings, including rotation setting, to default
	protected void setRotationAngleToDefault()
	{
		g2d.setTransform(defaultRotationSetting);
	}
	
	//////////////////////////////////////////////////////////
	// Draws the picture found at the fileNameWithExtension (e.g., myPic.jpg), at
	// the specified percentSize for picture scaling
	public void DrawCenteredPicture(String fileNameWithExtension, int percentSize)
	{
		// Convert percentage to double
		double percent = (double)percentSize / 100.0;
		
		// Create a new BufferedImage, which acts as a canvas
		BufferedImage personalPic = null;
		try {
			personalPic = ImageIO.read(new File(fileNameWithExtension));
		} catch (IOException e) { e.printStackTrace(); }
		
		// Resize image to percentage, save in ppResized
	    int w = (int)(personalPic.getWidth() * percent);  
	    int h = (int)(personalPic.getHeight() * percent);  
	    BufferedImage ppResized = new BufferedImage(w, h, personalPic.getType());  
	    Graphics2D g = ppResized.createGraphics();  
	    g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
	    RenderingHints.VALUE_INTERPOLATION_BILINEAR);  
	    g.drawImage(personalPic, 0, 0, w, h, 0, 0, personalPic.getWidth(), personalPic.getHeight(), null);  
	    g.dispose();  
	    
	    // Draw White Frame around the picture
		g2d.setColor(Color.WHITE);
		g2d.fillRect(getWidth()/2 - ppResized.getHeight()/2 - 10, getHeight()/2 - ppResized.getHeight()/2 - 10, ppResized.getWidth()+20, ppResized.getHeight()+20);
		
		// Draw the resized personal picture
		g2d.drawImage(ppResized, null, getWidth()/2 - ppResized.getHeight()/2, getHeight()/2 - ppResized.getHeight()/2);	
	}
	
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	// Getters for width/height
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////	
	//////////////////////////////////////////////////////////
	// Gets the width of the FB banner
	protected int getWidth()
	{
		return width;
	}
	
	//////////////////////////////////////////////////////////
	// Gets the height of the FB banner
	protected int getHeight()
	{
		return height;
	}

	//////////////////////////////////////////////////////////
	// Sets the size of the font for when g2d.drawString() is called
	protected void setFontSize(int fontSize)
	{
		g2d.setFont(new Font("Arial", 0, fontSize));
	}
}
